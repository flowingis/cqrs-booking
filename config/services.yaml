# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Domain\Repository\BookingRepository:
        public: true

    App\Domain\Repository\CourtAggregateRepository:
      class: App\Domain\Repository\CourtAggregateRepository
      arguments:
        - '@broadway.event_store.dbal'
        - '@broadway.event_handling.event_bus'

    App\Domain\BookingCommandHandler:
        class: App\Domain\BookingCommandHandler
        arguments:
          - '@App\Domain\Repository\CourtAggregateRepository'
          - '@App\Domain\Repository\UserRepository'
        tags:
            - { name: broadway.command_handler }

    App\Domain\Process\AssignPromotion:
            class: App\Domain\Process\PromotionAssignment
            arguments: ['@broadway.command_handling.command_bus']
            tags:
                - { name: broadway.domain.event_listener }

    App\Domain\Process\MailNotification:
            class: App\Domain\Process\MailNotification
            arguments: ['@App\Service\Mailer', '@App\Domain\Repository\UserRepository']
            tags:
                - { name: broadway.domain.event_listener }

    App\Domain\Process\SmsNotification:
            class: App\Domain\Process\SmsNotification
            arguments: ['@App\Service\Sms', '@App\Domain\Repository\UserRepository']
            tags:
                - { name: broadway.domain.event_listener }

    App\Domain\Projector\BookingBackofficeProjector:
        class: App\Domain\Projector\BookingBackofficeProjector
        arguments: ['@App\Domain\Repository\BookingBackofficeRepository']
        tags:
            - { name: broadway.domain.event_listener }

    App\Domain\Projector\BookingProjector:
        class: App\Domain\Projector\BookingProjector
        arguments: ['@App\Domain\Repository\BookingRepository']
        tags:
            - { name: broadway.domain.event_listener }


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
